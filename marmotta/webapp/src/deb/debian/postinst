#!/bin/sh
# postinst script for [[name]]

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Source debconf library.
. /usr/share/debconf/confmodule

# check if a postgres database exists
exists_pg_database () {
  DATABASE="$1"
  if [ -n "`sudo -u postgres /usr/bin/psql postgres -tAc "SELECT 1 FROM pg_database WHERE datname='$DATABASE'"`" ]; then
    return 0
  else
    return 1
  fi    
}

case "$1" in
    configure)
        service tomcat7 stop || true

        # home directories for every cluster
        mkdir -p /var/lib/marmotta

        db_get mico-marmotta/database-name
        DB_NAME="$RET"

        db_get mico-base/username
        DB_USER="$RET"

        db_get mico-base/password
        DB_PASS="$RET"

        db_get mico-marmotta/create-database
        CREATE_DATABASE="$RET"

        db_get mico-marmotta/host-name
        HOSTNAME="$RET"

        if [ "$CREATE_DATABASE" = "true" ] && ! exists_pg_database $DB_NAME; then
            sudo -u postgres /usr/bin/psql postgres -c "CREATE USER $DB_USER PASSWORD '$DB_PASS'" >/dev/null 2>&1
            sudo -u postgres /usr/bin/psql postgres -c "CREATE DATABASE $DB_NAME OWNER $DB_USER" >/dev/null 2>&1

            cat >/var/lib/marmotta/system-config.properties <<EOF
database.type = postgres
database.url = jdbc:postgresql://localhost:5432/$DB_NAME?prepareThreshold=3
database.user = $DB_USER
database.password = $DB_PASS
kiwi.host = http://$HOSTNAME:8080/marmotta/
kiwi.context = http://$HOSTNAME:8080/marmotta/
EOF
        fi

        db_stop

        chown tomcat7:tomcat7 -R /var/lib/marmotta

        cat >/etc/tomcat7/Catalina/localhost/marmotta.xml <<EOF
<!-- ATTENTION: This is a generated file
     ALL CHANGES HERE WILL BE LOST
     edit marmotta.xml.tmpl and run dpkg-reconfigure mico-marmotta to update
-->
EOF
        sed "s|%HOSTNAME%|$HOSTNAME|g; s|%MICO_USER%|$MICO_USER|g; s|%MICO_PASS%|$MICO_PASS|g" \
            /etc/tomcat7/Catalina/localhost/marmotta.xml.tmpl >> /etc/tomcat7/Catalina/localhost/marmotta.xml


        service tomcat7 start || true

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
